snippet iferr
if err != nil {
    return $1 err
}
endsnippet

snippet must
func must(err error) {
    if err != nil {
        panic(err)
	}
}
endsnippet

snippet must2
func must(err error, ctxinfo ...interface{}) {
    if err == nil {
        return
    }
    if len(ctxinfo) > 0 {
        info := []string{}
        for _, a := range ctxinfo { // XXX: fmt.Sprint is not good enough..
            info = append(info, fmt.Sprintf("%v", a))
        }
        panic(fmt.Sprintf("%v: %+v", strings.Join(info, " "), err))
    } else {
        panic(err)
    }
}
endsnippet

snippet recover
defer func() {
    if e := recover(); e != nil {
	    fmt.Printf("panic: %v: %v\n", e, string(debug.Stack()))
	}
}()
endsnippet
